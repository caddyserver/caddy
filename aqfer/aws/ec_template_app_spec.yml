---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'DB deployment'
Parameters:
  ECClusterName:
    Description: 'Elasticache Cluster name'
    Type: String
  ECSecurityGroupName:
    Description: 'Security Group name for Elasticache'
    Type: String
  ECSubnetGroupName:
    Description: 'Subnet Group name for Elasticache'
    Type: String
  ECNodeType:
    Description: 'Elasticache cache size'
    Default: 'cache.t2.micro'
    Type: String
  Vpc:
    Description: 'VPC Identifier'
    Type: String
  AvailabilityZones:
    Description: 'Availability Zones'
    Type: CommaDelimitedList
  Subnets:
    Description: 'Subnets for the Availability Zones'
    Type: CommaDelimitedList

Resources:
  ECSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref ECSecurityGroupName
      GroupDescription: 'Elasticache Security Group'
      VpcId: !Ref Vpc
  ECSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Ref ECSubnetGroupName
      Description: 'Elasticache Subnet Group'
      SubnetIds: !Ref Subnets
  ECReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    DependsOn:
      - ECSecurityGroup
      - ECSubnetGroup
    Properties:
      ReplicationGroupId: !Ref ECClusterName
      NumCacheClusters: 2
      Engine: redis
      EngineVersion: 3.2.4
      SecurityGroupIds:
        - !Ref ECSecurityGroup
      CacheNodeType: !Ref ECNodeType
      PreferredCacheClusterAZs: !Ref AvailabilityZones
      AutomaticFailoverEnabled: true
      CacheSubnetGroupName: !Ref ECSubnetGroupName
      ReplicationGroupDescription: !Sub 'Replication group for ${ECClusterName}'

Outputs:
  ECEndpoint:
    Description: 'Endpoint for the redis cluster'
    Value: !Join [ ':' , [ !GetAtt ECReplicationGroup.PrimaryEndPoint.Address, !GetAtt ECReplicationGroup.PrimaryEndPoint.Port ]]
    Export:
      Name: !Sub '${AWS::StackName}-ECEndpoint'
  ECInboundPort:
    Description: 'Inbound port for the redis cluster'
    Value: !GetAtt ECReplicationGroup.PrimaryEndPoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-ECInboundPort'
