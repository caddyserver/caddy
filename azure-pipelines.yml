# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.13'
    windows:
      imageName: 'windows-2019'

pool:
  vmImage: $(imageName)

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- bash: |
    sudo rm -rf $GOROOT
    sudo rm $(which go)
    latestGo=$(curl "https://golang.org/VERSION?m=text")
    echo "Latest Go version: $latestGo"
    echo "##vso[task.setvariable variable=LATEST_GO]$latestGo"
  displayName: "Get Go version"

# Linux
- bash: |
    wget "https://dl.google.com/go/$(LATEST_GO).linux-amd64.tar.gz"
    sudo tar -C /usr/local -xzf "$(LATEST_GO).linux-amd64.tar.gz"
    export PATH=$PATH:/usr/local/go/bin
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Install Go on Linux
# macOS
- bash: |
    wget "https://dl.google.com/go/$(LATEST_GO).darwin-amd64.tar.gz"
    sudo tar -C /usr/local -xzf "$(LATEST_GO).darwin-amd64.tar.gz"
    export PATH=$PATH:/usr/local/go/bin
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: Install Go on macOS
# Windows
- powershell: |
    (New-Object System.Net.WebClient).DownloadFile("https://dl.google.com/go/$(LATEST_GO).windows-amd64.zip", "$(LATEST_GO).windows-amd64.zip")
    Expand-Archive "$(LATEST_GO).windows-amd64.zip" -DestinationPath $(system.defaultWorkingDirectory)\go -Force
    $env:Path += ";$(system.defaultWorkingDirectory)\go"
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Install Go on Windows


- bash: |
    env
    which go
    go version
  displayName: 'Print Go and environment'

- script: |
    go get -v -t -d ./...
    go test -race ./...
  displayName: 'Run tests'